import { useEffect, useState } from "react";
import { QRCodeCanvas } from "qrcode.react";
import { useNavigate } from "react-router-dom";
import { API_ENDPOINT, GET_TOTP, VERIFY_OTP } from "../../const";

function SetupTotp() {
  const [totpSecret, setTotpSecret] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchTotpSecret = async () => {
      try {
        const response = await fetch(`${API_ENDPOINT}/${GET_TOTP}`, {
          method: "GET",
          headers: {
            Authorization: `Bearer ${localStorage.getItem("access_token")}`,
          },
        });

        if (!response.ok) {
          throw new Error("Failed to fetch TOTP secret");
        }

        const data = await response.json();

        // Retrieve totpsecret from backend to generate QR
        setTotpSecret(data.totpSecret);
        setLoading(false);
      } catch (error) {
        console.error("Fetch TOTP error:", error);
        setError("Failed to load TOTP secret. Please try again.");
        setLoading(false);
      }
    };

    fetchTotpSecret();
  }, []);

  const handleSubmit = async () => {
    const code = document.querySelector(".input-field").value; // Get the OTP code from input field

    if (!code) {
      alert("Please enter the OTP code.");
      return;
    }

    try {
      const response = await fetch(`${API_ENDPOINT}/${VERIFY_OTP}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("access_token")}`,
        },
        body: JSON.stringify({ code, totpSecret }),
      });

      const data = await response.json();

      if (response.ok) {
        localStorage.setItem("access_token", data.access_token);
        alert("TOTP Verified!");
        navigate("/posts");
      } else {
        alert(data.error || "Invalid OTP code. Please try again.");
      }
    } catch (error) {
      console.error("Fetch TOTP error:", error);
      alert("Error verifying OTP. Please try again.");
    }
  };

  if (loading) {
    return <p>Loading...</p>;
  }

  if (error) {
    return <p>{error}</p>;
  }

  return (
    <div className="setup_totp flex flex-col items-center justify-center min-h-screen p-4">
      {totpSecret ? (
        <>
          <p className="font-bold mb-4 text-xl">
            Scan the QR code with your desired authenticator:
          </p>
          <QRCodeCanvas
            value={`otpauth://totp/MyApp?secret=${totpSecret}`}
            size={256}
          />

          <p className="mb-4 mt-4 font-bold text-lg">
            Enter the code generated by your app:
          </p>
          <input
            type="text"
            placeholder="Enter the 6-digit code"
            className="input-field w-72 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button
            onClick={handleSubmit}
            className="btn cursor-pointer mt-4 w-72 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-200"
          >
            Verify Code
          </button>
        </>
      ) : (
        <p>No TOTP secret found.</p>
      )}
    </div>
  );
}

export default SetupTotp;
