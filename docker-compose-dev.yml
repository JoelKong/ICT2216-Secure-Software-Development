# this docker is for dev, use for testing ig before pushing to the cloud

version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env.development
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev" #this command shldnt be here in prod, npm run build instead in dockerfile
    networks:
      - leonardo-network

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env.development
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - app_logs:/var/log/app
      - post_uploads_data:/data/post_uploads
      - profile_uploads_data:/data/uploads
      - comment_uploads_data:/data/comment_uploads
    depends_on:
      - db
    entrypoint: >
      sh -c "
        until nc -z db 3306; do
          echo 'Waiting for MySQL to be ready...'
          sleep 3
        done
        echo 'MySQL is up - running migrations and starting backend'
        python migrate.py &&
        python main.py
      "
    networks:
      - leonardo-network

  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    env_file:
      - .env.development
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_USER: ${MYSQL_USER} // only use if not using root user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - leonardo-network

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./index.html:/var/www/html/index.html
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt # encryption stuff?
    depends_on:
      - frontend
      - backend
    networks:
      - leonardo-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - leonardo-network

#   nginx:                                      # THIS IS THE LAB ONE
#     image: nginx:latest
#     container_name: nginx-proxy
#     restart: unless-stopped
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./index.html:/var/www/html/index.html
#     networks:
#       lab-webproxy:
#         ipv4_address: 10.11.0.6

# networks:
#   lab-webproxy:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 10.11.0.0/16
#           gateway: 10.11.0.1

# wtf is this

# certbot:
#   image: certbot/certbot
#   volumes:
#     - ./certbot/www:/var/www/certbot
#     - ./certbot/conf:/etc/letsencrypt
#   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  leonardo-network:
    driver: bridge

volumes:
  mysql_data:
  app_logs:
  post_uploads_data:
  profile_uploads_data:
  comment_uploads_data:
