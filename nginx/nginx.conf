worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name theleonardodrhere.onthewifi.com www.theleonardodrhere.onthewifi.com;
        server_tokens off;

        # SSL settings (recommended for security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy "default-src 'self'; object-src 'none';" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Route for Let's Encrypt certificate validation
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name theleonardodrhere.onthewifi.com www.theleonardodrhere.onthewifi.com;
        server_tokens off;

        # SSL certificate paths
        ssl_certificate /etc/letsencrypt/live/theleonardodrhere.onthewifi.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/theleonardodrhere.onthewifi.com/privkey.pem;

        # SSL settings (recommended for security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy "default-src 'self'; object-src 'none';" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Serve React frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }

        # Proxy API requests to Flask backend
        location /api/ {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}